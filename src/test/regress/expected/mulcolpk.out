create schema mulcolpk;
set current_schema to mulcolpk;
create table mulcolpk (a int, b int);
insert into mulcolpk values (generate_series(0, 0), generate_series(1, 90));
insert into mulcolpk values (generate_series(1, 10), generate_series(0, 0));
analyze mulcolpk;
--we just test row estimate in index path.
set enable_seqscan = off;
set enable_bitmapscan = off;
set plan_cache_mode = force_generic_plan;
--1. create index 
create index mulcolpk_idx on mulcolpk(a, b);
explain select * from mulcolpk where a = 0 and b = 0;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 [Bypass]
 Index Only Scan using mulcolpk_idx on mulcolpk  (cost=0.00..8.43 rows=9 width=8)
   Index Cond: ((a = 0) AND (b = 0))
(3 rows)

--2. create unique index
drop index mulcolpk_idx;
create unique index mulcolpk_idx on mulcolpk(a, b);
explain select * from mulcolpk where a = 0 and b = 0;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 [Bypass]
 Index Only Scan using mulcolpk_idx on mulcolpk  (cost=0.00..8.27 rows=1 width=8)
   Index Cond: ((a = 0) AND (b = 0))
(3 rows)

reset plan_cache_mode;
reset enable_bitmapscan;
reset enable_seqscan;
drop schema mulcolpk cascade;
NOTICE:  drop cascades to table mulcolpk
