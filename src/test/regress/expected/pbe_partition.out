SET plan_cache_mode = force_generic_plan;
-- create range_partition table.
CREATE TABLE partition_scan1(a int, b int)
PARTITION BY RANGE (a)
(
	    PARTITION P1 VALUES LESS THAN(10),
	    PARTITION P2 VALUES LESS THAN(20),
	    PARTITION P3 VALUES LESS THAN(30),
	    PARTITION P4 VALUES LESS THAN(40)
);
CREATE UNIQUE INDEX index_on_partition_scan1 ON partition_scan1(a) LOCAL;
insert into partition_scan1 values(generate_series(1,39,1), generate_series(1,39,1));
-- 等于param
prepare p1(int) as SELECT * FROM partition_scan1 s1 where s1.a = $1 ORDER BY s1.a;
explain (costs off) execute p1(10);
                                    QUERY PLAN                                     
-----------------------------------------------------------------------------------
 Partition Iterator
   Iterations: 4
   ->  Partitioned Index Scan using index_on_partition_scan1 on partition_scan1 s1
         Index Cond: (a = $1)
         Selected Partitions:  1..4
(5 rows)

execute p1(10);
 a  | b  
----+----
 10 | 10
(1 row)

--大于param
prepare p2(int) as SELECT * FROM partition_scan1 s1 where s1.a >$1 ORDER BY s1.a;
explain (costs off) execute p2(35);
                       QUERY PLAN                       
--------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1 s1
               Filter: (a > $1)
               Selected Partitions:  1..4
(7 rows)

execute p2(35);
 a  | b  
----+----
 36 | 36
 37 | 37
 38 | 38
 39 | 39
(4 rows)

--小于param
prepare p3(int) as SELECT * FROM partition_scan1 s1 where s1.a <$1 ORDER BY s1.a;
explain (costs off) execute p3(35);
                       QUERY PLAN                       
--------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1 s1
               Filter: (a < $1)
               Selected Partitions:  1..4
(7 rows)

execute p3(35);
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
 32 | 32
 33 | 33
 34 | 34
(34 rows)

-- 大于等于param
prepare p4(int) as SELECT * FROM partition_scan1 s1 where s1.a >=$1 ORDER BY s1.a;
explain (costs off) execute p4(35);
                       QUERY PLAN                       
--------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1 s1
               Filter: (a >= $1)
               Selected Partitions:  1..4
(7 rows)

execute p4(35);
 a  | b  
----+----
 35 | 35
 36 | 36
 37 | 37
 38 | 38
 39 | 39
(5 rows)

-- 小于等于param
prepare p5(int) as SELECT * FROM partition_scan1 s1 where s1.a <=$1 ORDER BY s1.a;
explain (costs off) execute p5(35);
                       QUERY PLAN                       
--------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1 s1
               Filter: (a <= $1)
               Selected Partitions:  1..4
(7 rows)

execute p5(35);
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
 32 | 32
 33 | 33
 34 | 34
 35 | 35
(35 rows)

-- 等于expr
prepare p6(int,int) as SELECT * FROM partition_scan1 s1 where s1.a = $1+$2+1 ORDER BY s1.a;
explain (costs off) execute p6(10,10);
                                    QUERY PLAN                                     
-----------------------------------------------------------------------------------
 Partition Iterator
   Iterations: 4
   ->  Partitioned Index Scan using index_on_partition_scan1 on partition_scan1 s1
         Index Cond: (a = (($1 + $2) + 1))
         Selected Partitions:  1..4
(5 rows)

execute p6(10,10);
 a  | b  
----+----
 21 | 21
(1 row)

--大于expr
prepare p7(int,int) as SELECT * FROM partition_scan1 s1 where s1.a > $1+$2+1 ORDER BY s1.a;
explain (costs off) execute p7(10,10);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1 s1
               Recheck Cond: (a > (($1 + $2) + 1))
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a > (($1 + $2) + 1))
                     Selected Partitions:  1..4
(10 rows)

execute p7(10,10);
 a  | b  
----+----
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
 32 | 32
 33 | 33
 34 | 34
 35 | 35
 36 | 36
 37 | 37
 38 | 38
 39 | 39
(18 rows)

--小于expr
prepare p8(int,int) as SELECT * FROM partition_scan1 s1 where s1.a < $1+$2+1 ORDER BY s1.a;
explain (costs off) execute p8(10,10);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1 s1
               Recheck Cond: (a < (($1 + $2) + 1))
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a < (($1 + $2) + 1))
                     Selected Partitions:  1..4
(10 rows)

execute p8(10,10);
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
(20 rows)

-- 大于等于expr
prepare p9(int,int) as SELECT * FROM partition_scan1 s1 where s1.a >= $1+$2+1 ORDER BY s1.a;
explain (costs off) execute p9(10,10);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1 s1
               Recheck Cond: (a >= (($1 + $2) + 1))
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a >= (($1 + $2) + 1))
                     Selected Partitions:  1..4
(10 rows)

execute p9(10,10);
 a  | b  
----+----
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
 31 | 31
 32 | 32
 33 | 33
 34 | 34
 35 | 35
 36 | 36
 37 | 37
 38 | 38
 39 | 39
(19 rows)

-- 小于等于expr
prepare p10(int,int) as SELECT * FROM partition_scan1 s1 where s1.a <= $1+$2+1 ORDER BY s1.a;
explain (costs off) execute p10(10,10);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1 s1
               Recheck Cond: (a <= (($1 + $2) + 1))
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a <= (($1 + $2) + 1))
                     Selected Partitions:  1..4
(10 rows)

execute p10(10,10);
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
(21 rows)

--boolexpr_and
prepare p11(int,int) as SELECT * FROM partition_scan1 s1 where s1.a >= $1 and s1.b = $2 ORDER BY s1.a;
explain (costs off) execute p11(10,10);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1 s1
               Recheck Cond: (a >= $1)
               Filter: (b = $2)
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a >= $1)
                     Selected Partitions:  1..4
(11 rows)

execute p11(10,10);
 a  | b  
----+----
 10 | 10
(1 row)

prepare p12(int,int) as SELECT * FROM partition_scan1 s1 where s1.a > $1 and s1.b < $2;
explain (costs off) execute p12(10,10);
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Partition Iterator
   Iterations: 4
   ->  Partitioned Bitmap Heap Scan on partition_scan1 s1
         Recheck Cond: (a > $1)
         Filter: (b < $2)
         Selected Partitions:  1..4
         ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
               Index Cond: (a > $1)
               Selected Partitions:  1..4
(9 rows)

prepare p13(int,int) as SELECT * FROM partition_scan1 s1 where s1.a <= $1 and s1.b = $2+1;
explain (costs off) execute p13(10,10);
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Partition Iterator
   Iterations: 4
   ->  Partitioned Bitmap Heap Scan on partition_scan1 s1
         Recheck Cond: (a <= $1)
         Filter: (b = ($2 + 1))
         Selected Partitions:  1..4
         ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
               Index Cond: (a <= $1)
               Selected Partitions:  1..4
(9 rows)

prepare p131(int,int) as SELECT * FROM partition_scan1 s1 where s1.a < $1+1 and s1.b > $2+1;
explain (costs off) execute p131(10,10);
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Partition Iterator
   Iterations: 4
   ->  Partitioned Bitmap Heap Scan on partition_scan1 s1
         Recheck Cond: (a < ($1 + 1))
         Filter: (b > ($2 + 1))
         Selected Partitions:  1..4
         ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
               Index Cond: (a < ($1 + 1))
               Selected Partitions:  1..4
(9 rows)

--update
prepare p14(int) as UPDATE partition_scan1 set b = b + 10 where a = $1;
explain (costs off) execute p14(10);
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Update on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Index Scan using index_on_partition_scan1 on partition_scan1
               Index Cond: (a = $1)
               Selected Partitions:  1..4
(6 rows)

prepare p15(int) as UPDATE partition_scan1 set b = b + 10 where a > $1;
explain (costs off) execute p15(10);
                     QUERY PLAN                      
-----------------------------------------------------
 Update on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1
               Filter: (a > $1)
               Selected Partitions:  1..4
(6 rows)

prepare p16(int) as UPDATE partition_scan1 set b = b + 10 where a >= $1+1;
explain (costs off) execute p16(10);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Update on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1
               Recheck Cond: (a >= ($1 + 1))
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a >= ($1 + 1))
                     Selected Partitions:  1..4
(9 rows)

prepare p17(int) as UPDATE partition_scan1 set b = b + 10 where a <= $1;
explain (costs off) execute p17(10);
                     QUERY PLAN                      
-----------------------------------------------------
 Update on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1
               Filter: (a <= $1)
               Selected Partitions:  1..4
(6 rows)

prepare p18(int) as UPDATE partition_scan1 set b = b + 10 where a < $1;
explain (costs off) execute p18(10);
                     QUERY PLAN                      
-----------------------------------------------------
 Update on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1
               Filter: (a < $1)
               Selected Partitions:  1..4
(6 rows)

prepare p181(int,int) as UPDATE partition_scan1 set b = b + 10 where a < $1 and b < $2;
explain (costs off) execute p181(10,10);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Update on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1
               Recheck Cond: (a < $1)
               Filter: (b < $2)
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a < $1)
                     Selected Partitions:  1..4
(10 rows)

-- delete
prepare p19(int) as DELETE FROM partition_scan1 where a=$1; 
explain (costs off) execute p19(1);
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Delete on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Index Scan using index_on_partition_scan1 on partition_scan1
               Index Cond: (a = $1)
               Selected Partitions:  1..4
(6 rows)

prepare p20(int) as DELETE FROM partition_scan1 where a>$1;
explain (costs off) execute p20(38);
                     QUERY PLAN                      
-----------------------------------------------------
 Delete on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1
               Filter: (a > $1)
               Selected Partitions:  1..4
(6 rows)

prepare p21(int) as DELETE FROM partition_scan1 where a<$1;
explain (costs off) execute p21(3);
                     QUERY PLAN                      
-----------------------------------------------------
 Delete on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on partition_scan1
               Filter: (a < $1)
               Selected Partitions:  1..4
(6 rows)

prepare p22(int) as DELETE FROM partition_scan1 where a>$1+1;
explain (costs off) execute p22(37);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Delete on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1
               Recheck Cond: (a > ($1 + 1))
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a > ($1 + 1))
                     Selected Partitions:  1..4
(9 rows)

prepare p23(int) as DELETE FROM partition_scan1 where a<$1+1;
explain (costs off) execute p23(5);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Delete on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1
               Recheck Cond: (a < ($1 + 1))
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a < ($1 + 1))
                     Selected Partitions:  1..4
(9 rows)

prepare p24(int,int) as DELETE FROM partition_scan1 where a>$1 and b>$2;
explain (costs off) execute p24(30,1);
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Delete on partition_scan1
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Bitmap Heap Scan on partition_scan1
               Recheck Cond: (a > $1)
               Filter: (b > $2)
               Selected Partitions:  1..4
               ->  Partitioned Bitmap Index Scan on index_on_partition_scan1
                     Index Cond: (a > $1)
                     Selected Partitions:  1..4
(10 rows)

